#include <MaxMatrix.h>
#include <avr/pgmspace.h>
byte Buffer[10]; 
int NbrChar;

const int DIN = 12;   // DIN pin of MAX7219 module
const int CLK = 10;   // CLK pin of MAX7219 module
const int CS = 11;    // CS pin of MAX7219 module
const int maxInUse = 4; //nbr of MAX7219 module 
MaxMatrix matriceLed(DIN, CS, CLK, maxInUse);


PROGMEM const unsigned char Message[]={
8, 8,B00000000,B01111100,B01100110,B01100110,B01111100,B01100110,B01100110,B01111100,  //B
8, 8,B00000000,B00111100,B01100110,B01100110,B01100110,B01100110,B01100110,B00111100,  //O
8, 8,B00000000,B01100011,B01110011,B01111011,B01101111,B01100111,B01100011,B01100011,  //N
8, 8,B00000000,B00011110,B00001100,B00001100,B00001100,B01101100,B01101100,B00111000,  //J
8, 8,B00000000,B00111100,B01100110,B01100110,B01100110,B01100110,B01100110,B00111100,  //O
8, 8,B00000000,B01100110,B01100110,B01100110,B01100110,B01100110,B01100110,B00111110,  //U
8, 8,B00000000,B01111100,B01100110,B01100110,B01111100,B01111000,B01101100,B01100110,  //R
8, 8,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,  //Espace 
8, 8,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,  //Espace 
8, 8,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,  //Espace 
};


void setup() {
  Serial.begin(9600);
  matriceLed.init(); 
  matriceLed.setIntensity(2); 
}

void loop() {
NbrChar=sizeof(Message)/10;

for(int i=0 ; i<NbrChar;i++){
memcpy_P(Buffer,Message+i*10,10);
matriceLed.writeSprite(maxInUse*8, 0, Buffer);
matriceLed.setColumn(maxInUse*8 + Buffer[0], 0);
  for (int i=0; i<=Buffer[0]; i++)
  {
    delay(100);
    matriceLed.shiftLeft(false, false);
  }
}
}
 
