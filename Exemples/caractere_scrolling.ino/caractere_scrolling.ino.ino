#include <MaxMatrix.h>
#include <avr/pgmspace.h>
byte Buffer[10];
int NbrChar;

const int DIN = 12;   // DIN pin of MAX7219 module
const int CLK = 10;   // CLK pin of MAX7219 module
const int CS = 11;    // CS pin of MAX7219 module
const int maxInUse = 4; //nbr of MAX7219 module
MaxMatrix matriceLed(DIN, CS, CLK, maxInUse);


PROGMEM const unsigned char Message[] = {
  6, 8, B00000000, B00111100, B00011000, B00011000, B00011000, B00011000, B00011000, B00111100, // I
  4, 8, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, // espace
  7, 8, B00000000, B01100000, B01100000, B01100000, B01100000, B01100000, B01100000, B01111110, // L
  7, 8, B00000000, B00111100, B01100110, B01100110, B01100110, B01100110, B01100110, B00111100, // O
  7, 8, B00000000, B01100110, B01100110, B01100110, B01100110, B01100110, B00111100, B00011000, // V
  7, 8, B00000000, B01111110, B01100000, B01100000, B01111100, B01100000, B01100000, B01111110, // E
  4, 8, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, // espace
  7, 8, B00000000, B00111100, B01100110, B01100110, B01111110, B01100110, B01100110, B01100110, // A
  7, 8, B00000000, B00000000, B00000000, B01111100, B01100110, B01100110, B01100000, B01100000, // r
  7, 8, B00000000, B00000110, B00000110, B00000110, B00111110, B01100110, B01100110, B00111110, // d
  7, 8, B00000000, B00000000, B00000000, B01100110, B01100110, B01100110, B01100110, B00111110, // u
  5, 8, B00000000, B00000000, B00110000, B00000000, B00110000, B00110000, B00110000, B01111000, // i
  7, 8, B00000000, B00000000, B00000000, B01111100, B01111110, B01100110, B01100110, B01100110, // n
  7, 8, B00000000, B00000000, B00000000, B00111100, B01100110, B01100110, B01100110, B00111100, // o
  4, 8, B00000000, B01100000, B01100000, B01100000, B01100000, B01100000, B00000000, B01100000, // !
  4, 8, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, // espace
  4, 8, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, // espace
};


void setup() {
  matriceLed.init();
  matriceLed.setIntensity(2);
}

void loop() {
  NbrChar = sizeof(Message) / 10;

  for (int i = 0 ; i < NbrChar; i++) {
    memcpy_P(Buffer, Message + i * 10, 10);
    matriceLed.writeSprite(maxInUse * 8, 0, Buffer);
    matriceLed.setColumn(maxInUse * 8 + Buffer[0], 0);
    for (int i = 0; i <= Buffer[0]; i++)
    {
      delay(100);
      matriceLed.shiftLeft(false, false);
    }
  }
}
